### File managed with puppet ### 
## Served by:        '<%= scope.lookupvar('::servername') %>' 
## Module:           '<%= scope.to_hash['module_name'] %>' 
## Template source:  'MODULES<%= template_source.gsub(Regexp.new("^#{Puppet::Node::Environment.current[:modulepath].gsub(':','|')}"),"") %>'

#
# Configuration variables
#
# JAVA
#   Command to invoke Java. If not set, java (from the PATH) will be used.
#
# JAVA_OPTIONS
#   Extra options to pass to the JVM
#
<% if scope.lookupvar('jetty::java_options') -%>
JAVA_OPTIONS="<%= scope.lookupvar('jetty::java_options') %>"
<% end -%>
# JETTY_HOME
#   Where Jetty is installed. If not set, the script will try go
#   guess it by first looking at the invocation path for the script,
#   and then by looking in standard locations as $HOME/opt/jetty
#   and /opt/jetty. The java system property "jetty.home" will be
#   set to this value for use by configure.xml files, f.e.:
#
#    <Arg><Property name="jetty.home" default="."/>/webapps/jetty.war</Arg>
JETTY_HOME=/opt/jetty
#
# JETTY_BASE
#   Where your Jetty base directory is.  If not set, the value from
#   $JETTY_HOME will be used.
#
# JETTY_RUN
#   Where the $NAME.pid file should be stored. It defaults to the
#   first available of /var/run, /usr/var/run, JETTY_BASE and /tmp
#   if not set.
#
# JETTY_PID
#   The Jetty PID file, defaults to $JETTY_RUN/$NAME.pid
#
# JETTY_ARGS
#   The default arguments to pass to jetty.
#   For example
#      JETTY_ARGS=jetty.port=8080 jetty.spdy.port=8443 jetty.secure.port=443
JETTY_ARGS="jetty.port=8888 jetty.spdy.port=8443 jetty.secure.port=443"
#
# JETTY_USER
#   if set, then used as a username to run the server as
JETTY_USER=jetty

JETTY_LOGS=/var/log/jetty
